package com.wulala.myuserviewmodeldemo.fortest

//////// 绑定 ///////////
val cmd1 = byteArrayOf(0x01)
val cmd2 = byteArrayOf(0x01, 0x03)

const val cmd1Text = "扫描开始"
const val cmd2Text = "扫描开始2字节"

///////// 解绑 //////////
val cmd3 = byteArrayOf(0x08, 0x01)
val cmd4 = byteArrayOf(0x08, 0x05)
val cmd5 = byteArrayOf(0x08, 0x64)
val cmd6 = byteArrayOf(0x08)

const val cmd3Text = "解绑"
const val cmd4Text = "解绑05"
const val cmd5Text = "解绑0x64"
const val cmd6Text = "解绑1字节"

////////// 启动游戏 /////////
val cmd7 = byteArrayOf(0x11)
val cmd8 = byteArrayOf(0x11, 0x02)

const val cmd7Text = "游戏开始"
const val cmd8Text = "游戏开始2字节"

///////// 停止游戏 //////////

val cmd9 = byteArrayOf(0x12)
val cmd10 = byteArrayOf(0x12, 0x01)

const val cmd9Text = "游戏停止"
const val cmd10Text = "游戏停止2字节"

//////// 保存Event /////////
// 0x20（1字节）+触发事件ID（1字节） +停止/启动游戏（1字节）+输出指定波形（2字节）+ 强度临时改变（6字节）+强度永久改变（4字节）+游戏时间改变（4字节），共19字节
val cmd11 = byteArrayOf(
    0x20, 0x01, 0x11, 0x01, 0x0a, 0x02, 0x02, 0x05, 0x05, 0x02, 0x11, (-2).toByte(), 0x05, 0x03, 0x03, 0x00, 0x05, 0x00, 0x0a
    // event id 1, 开关模式, A通道惩罚1, b通道惩罚10, A强度模式为随机, 从2到5, B是0.5s变化1, 从+2到+11, A基础强度从-2, 到5, B固定+3, 游戏时间从+5到+10
)

val cmd13 = byteArrayOf(
    0x20, 29.toByte(), 0x11, 0x01, 0x0a, 0x02, 0x02, 0x05, 0x05,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
)
val cmd14 = byteArrayOf(
    0x20, 0x01, 0x00, 0x11, 0x01, 0x0a, 0x02, 0x02, 0x05, 0x05,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
)

val cmd15 = byteArrayOf(
    0x20, 0x00, 0x11, 0x01, 0x0a, 0x02, 0x02, 0x05, 0x05, 0x00,
    0x00, (-2).toByte(), 0x05, 0x03, 0x03, 0x00, 0x05, 0x00, 0x0a
)

val cmd16 = byteArrayOf(
    0x20, 0x01, 0x11, 0x01, 0x71, 0x02, 0x02, 0x05, 0x05, 0x00,
    0x00, (-2).toByte(), 0x05, 0x03, 0x03, 0x00, 0x05, 0x00, 0x0a
)

val cmd46 = byteArrayOf(
    0x20, 0x32, 0x11, 0x01, 0x0a, 0x02, 0x02, 0x05, 0x05, 0x00,
    0x00, (-2).toByte(), 0x05, 0x03, 0x03, 0x00, 0x05, 0x00, 0x0a
)

val cmd47 = byteArrayOf(
    0x20, 0x01, 0x86.toByte(), 0x01, 0x0a, 0x02, 0x02, 0x05, 0x05, 0x00,
    0x00, (-2).toByte(), 0x05, 0x03, 0x03, 0x00, 0x05, 0x00, 0x0a
)

val cmd48 = byteArrayOf(
    0x20, 0x01, 0x11, 0x17, 0x01, 0x02, 0x02, 0x05, 0x05, 0x00,
    0x00, (-2).toByte(), 0x05, 0x03, 0x03, 0x00, 0x05, 0x00, 0x0a
)

val cmd49 = byteArrayOf(
    0x20, 0x01, 0x11, 0x17, 0x71, 0x02, 0x02, 0x05, 0x05, 0x00,
    0x00, (-2).toByte(), 0x05, 0x03, 0x03, 0x00, 0x05, 0x00, 0x0a
)


const val cmd11Text = "保存Event1"

const val cmd13Text = "保存Event29"
const val cmd14Text = "18字节"
const val cmd15Text = "保存Event0"
const val cmd16Text = "保存B 71"
const val cmd46Text = "保存Event50"
const val cmd47Text = "Switch86"
const val cmd48Text = "保存A 17"
const val cmd49Text = "保存17/71"


//////// 删除Event /////////

val cmd17 = byteArrayOf(0x28, 0x01)
val cmd18 = byteArrayOf(0x28, 0x00)
val cmd19 = byteArrayOf(0x28, 0x20)
val cmd20 = byteArrayOf(0x28, 0x20, 0x01, 0x02)
val cmd21 = byteArrayOf(0x28, 0x08)

const val cmd17Text = "删除Event1"
const val cmd18Text = "删除Event0"
const val cmd19Text = "删除Event32"
const val cmd20Text = "4字节"
const val cmd21Text = "删除Event8"

///////// 保存触发 ////////// 0x17
val cmd22 = byteArrayOf(0x30, 0x01, 0x00, 0x02, 0x05, 0x0a, 0x02, 0x00, 0x03, 0xAE.toByte(), 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00)
// 0x30（1字节）+颜色（1字节）+触发设置（15字节），共17字节
// 颜色01, 触发随机模式event id 01, x:02, y:05, 反应时间10秒,
// 按键模式event id 02, 按下触发
// g值触发event id 03, 高值触发23, 持续buf 20即2秒

val cmd23 = byteArrayOf(0x30, 0, 0x01, 0x02, 0x05, 0x0a, 0x02, 0x00, 0x03, 0x17, 0x14)
val cmd24 = byteArrayOf(0x30, 100, 0x01, 0x02, 0x05, 0x0a, 0x02, 0x00, 0x03, 0x17, 0x14)
val cmd50 = byteArrayOf(0x30, 0x01, 0x03)

// val randomModeTriggerCmd = byteArrayOf(0x30, 0x01, 0x00, 0x02, 0x05, 0x0a, 0x02, 0x00, 0x03, 0x17, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00)
// const val randomModeTriggerCmdText = "设置绿色随机模式"

const val cmd22Text = "保存触发1"
const val cmd23Text = "保存触发0"
const val cmd24Text = "保存触发100"
const val cmd50Text = "3字节"

///////// 游戏设置 //////////
// 0x40（1字节） +延时启动 （2字节）+ 基础强度设置（2字节）+ AB通道背景波形（2字节）+ 游戏时长（4字节） + 安全设置（2字节） ，共13字节

val cmd25 = byteArrayOf(
    // 0x40, 0x00, 0x03, 0x03, 0x02, 0x09, 0x0a, 0x00, 0x64, 0x00, 200.toByte(), 100, 120
    0x40, 0x00, 0x03, 0x03, 0x02, 0x09, 0x0a, 0x00, 0x64, 0x00, 0x20, 0x00, 200.toByte(), 100, 120
    // 根据需求, 这里增加两个byte
    // 延时10秒, A背景强度03, B背景强度02, A背景9, B背景10, 游戏时长, min100, max200, 安全左100, 右12
)

val cmd26 = byteArrayOf(0x40, 0x00)

val cmd52 = byteArrayOf(
    0x40, 0x00, 0x0a, 0x02, 0x03, 0x17, 0x03, 0x00, 0x64, 0x00,
    0xC8.toByte(), 0x64, 0x78
)

val cmd53 = byteArrayOf(
    0x40, 0x00, 0x0a, 0x02, 0x03, 0x17, 0x71, 0x00, 0x64, 0x00,
    0xC8.toByte(), 0x64, 0x78
)

val cmd54 = byteArrayOf(
    0x40, 0x00, 0x0a, 0x02, 0x03, 0x03, 0x71, 0x00, 0x64, 0x00,
    0xC8.toByte(), 0x64, 0x78
)

val cmd55 = byteArrayOf(
    0x40, 0x00, 0x0a, 0x03, 0x02, 0x07, 0x03, 0x00, 200.toByte(), 0x00, 100.toByte(), 0x00, 0x64, 100, 120
)

const val cmd25Text = "游戏设置"
const val cmd26Text = "2字节"
const val cmd52Text = "A17"
const val cmd53Text = "A17B71"
const val cmd54Text = "B71"
const val cmd55Text = "时间错误"

///////// 查询所有配置 /////////
val cmd27 = byteArrayOf(0xFF.toByte())
val cmd28 = byteArrayOf(0xFF.toByte(), 0x02)
const val cmd27Text = "查询所有配置"
const val cmd28Text = "2字节"

///////// 单独查询游戏状态 /////////
val cmd29 = byteArrayOf(0xFA.toByte())
val cmd30 = byteArrayOf(0xFA.toByte(), 0x02)
const val cmd29Text = "游戏状态"
const val cmd30Text = "2字节"

///////// 查询游戏设置 /////////
val cmd39 = byteArrayOf(0xFD.toByte())
val cmd40 = byteArrayOf(0xFD.toByte(), 0x01)
const val cmd39Text = "查询游戏设置"
const val cmd40Text = "2字节"

///////// 查询所有绑定的子设备的触发 /////////
val cmd41 = byteArrayOf(0xFC.toByte())
val cmd42 = byteArrayOf(0xFC.toByte(), 0x01)
const val cmd41Text = "查询所有触发"
const val cmd42Text = "2字节"

///////// 查询所有Event /////////
val cmd43 = byteArrayOf(0xFB.toByte())
val cmd44 = byteArrayOf(0xFB.toByte(), 0x01)
const val cmd43Text = "查询所有Event"
const val cmd44Text = "2字节"

///////// trigger挨个配置 /////////
// 0x30（1字节）+颜色（1字节）+触发设置（15字节），共17字节
// 颜色01, 触发随机模式event id 01, x:02, y:05, 反应时间10秒,
// 按键模式event id 02, 按下触发
// g值触发event id 03, 高值触发23, 持续buf 20即2秒
val triggerCmdForColor2 = byteArrayOf(0x30, 0x02, 0x00, 0x02, 0x05, 0x0a, 0x03, 0x00, 0x00, 0x17, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00)
const val triggerCmdForColor2Text = "设置红按键触发3"

val triggerCmdForColor3 = byteArrayOf(0x30, 0x03, 0x00, 0x02, 0x05, 0x0a, 0x00, 0x00, 0x04, 0x17, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00)
const val triggerCmdForColor3Text = "设置紫G触发4"

val triggerCmdForColor1 = byteArrayOf(0x30, 0x01, 0x03, 0x0a, 0x64, 0x32, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00)
const val triggerCmdForColor1Text = "设置黄色随机触发3"

val triggerCmdForColor4 = byteArrayOf(0x30, 0x04, 0x00, 0x02, 0x05, 0x0a, 0x00, 0x00, 0x04, 0x17, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00)
const val triggerCmdForColor4Text = "设置蓝按键触发3"

val triggerCmdForColor5 = byteArrayOf(0x30, 0x04, 0x00, 0x02, 0x05, 0x0a, 0x00, 0x00, 0x04, 0x17, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00)
const val triggerCmdForColor5Text = "设置青按键触发3"

val triggerCmdForColor6 = byteArrayOf(0x30, 0x04, 0x00, 0x02, 0x05, 0x0a, 0x00, 0x00, 0x04, 0x17, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00)
const val triggerCmdForColor6Text = "设置绿按键触发3"

val triggerCmdForColor2_1 = byteArrayOf(0x30, 0x02, 0x01, 0x03, 0x05, 0x06, 0x07, 0x08, 0x09, 0x04, 0x0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00)
const val triggerCmdForTazerText = "设置红设备游戏结束触发"

// val triggerCmdForColor2_2 = byteArrayOf(0x30, 0x02, 0x00, 0x02, 0x05, 0x0a, 0x03, 0x00, 0x00, 0x17, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00)
// const val triggerCmdAutoCancelTrgText = "设置红设备定时5秒触发"

///////// 挨个移除配置 /////////
val unbindCmdForColor1 = byteArrayOf(0x08, 0x01)
val unbindCmdForColor2 = byteArrayOf(0x08, 0x02)
val unbindCmdForColor3 = byteArrayOf(0x08, 0x03)
val unbindCmdForColor4 = byteArrayOf(0x08, 0x04)
val unbindCmdForColor5 = byteArrayOf(0x08, 0x05)
val unbindCmdForColor6 = byteArrayOf(0x08, 0x06)

const val unbindCmdForColor1Text = "移除黄"
const val unbindCmdForColor2Text = "移除红"
const val unbindCmdForColor3Text = "移除紫"
const val unbindCmdForColor4Text = "移除蓝"
const val unbindCmdForColor5Text = "移除青"
const val unbindCmdForColor6Text = "移除绿"

////////////// 打印在线按钮列表 ///////////////
val printOnlineBtnsCmd = byteArrayOf(0xE0.toByte())
const val printOnlineBtnsCmdText = "打印在线按钮列表"

val bindEvent2Cmd = byteArrayOf(0x20, 0x02, 0x00, 0x01, 0x0a, 0x02, 0x02, 0x05, 0x05, 0x02, 0x11, (-2).toByte(), 0x05, 0x03, 0x03, 0x00, 0x05, 0x00, 0x0a)
const val bindEvent2CmdText = "保存Event2"

// 透传event id1
// 自动取消触发时间为5秒
val bindEvent3Cmd = byteArrayOf(0x20, 0x03, 0x01, 0x01, 0x0a, 0x02, 0x02, 0x05, 0x05, 0x02, 0x11, (-2).toByte(), 0x05, 0x03, 0x03, 0x00, 0x05, 0x00, 0x0a, 5)
const val bindEvent3CmdText = "保存Event3"

val bindEvent4Cmd = byteArrayOf(0x20, 0x04, 0x00, 0x01, 0x0a, 0x02, 0x02, 0x05, 0x05, 0x02, 0x11, (-2).toByte(), 0x05, 0x03, 0x03, 0x00, 0x05, 0x00, 0x0a)
const val bindEvent4CmdText = "保存Event4"

val bindEvent24Cmd = byteArrayOf(0x20, 0x18, 0x00, 0x01, 0x0a, 0x02, 0x02, 0x05, 0x05, 0x02, 0x11, (-2).toByte(), 0x05, 0x03, 0x03, 0x00, 0x05, 0x00, 0x0a)
const val bindEvent24CmdText = "保存Event24"

val getPowerLiveCmd = byteArrayOf(0xE1.toByte())
const val getPowerLiveCmdText = "获取实时强度"

val getPrintBindCmd = byteArrayOf(0xE2.toByte())
const val getPrintBindCmdText = "打印绑定设备"
